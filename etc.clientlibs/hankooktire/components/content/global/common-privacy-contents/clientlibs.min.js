/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
(() => {
function main() {
    const versionParts = document.querySelectorAll('.cpvc .part-wrap');
    const selectButton = document.querySelectorAll('.cpvc .select-box .drop-box button');
    selectButton.forEach((el) => {
        el.addEventListener('click', function (event) {
            const dataKey = event.target.dataset.version;
            // console.log(dataKey)
            versionParts.forEach((el) => {
                el.classList.remove('active')
                if (el.dataset.version === dataKey) {
                    el.classList.add('active')
                }
            })

            window.locomotive && window.locomotive.update();
        })
    })


    $anchors = document.querySelectorAll('.anchor').forEach((anchor) => {
        anchor.addEventListener('click', (e) => {
            e.preventDefault()
            const destination = e.target.dataset.anchor;
            const $header = document.getElementById('header');
            const headerHeight = $header.clientHeight;

            window.locomotive.scrollTo(`${destination}`, {
                duration: 600,
                easing: [0.66, 0, 0.34, 1],
                offset: -headerHeight,
                callback: function () {
                    window.locomotive.start()
                }
            })
        })
    })


    if (!!document.querySelector('.policyAgree')) {
        getCookieStatus();
        setCooKieStatus();
        cookiePopToBtn();
    }



    function getCookieStatus() {
        const agreeBtn = document.getElementById('rdAgree')
        const disAgreeBtn = document.getElementById('rdDisagree')
            if (getCookie(window.d_scp_cookiepopName) == "Y") {
                agreeBtn.checked = true
            } else {
                disAgreeBtn.checked = true
            }
    }


    function setCooKieStatus() {
        document.querySelectorAll('.cpvc .radio-box .radio').forEach(radioBtn => {
            radioBtn.addEventListener('click', (e) => {
                const value = e.currentTarget.querySelector('input').value;
                console.log(value)
                if (value === "agree") {
                    setCookiePopup('Y');
                } else {
                    setCookiePopup('N')
                }
            })
        })
    }

    function cookiePopToBtn() {
        const cookiePopBtn = document.querySelectorAll('.cookie-pop .cookie-btn');
        const agreeBtn = document.getElementById('rdAgree')
        const disAgreeBtn = document.getElementById('rdDisagree')
        cookiePopBtn.forEach(btn => {
            btn.addEventListener('click', () => {
                if (btn.matches('.agree')) {
                    agreeBtn.checked = true;
                } else if (btn.matches('.disagree')) {
                    disAgreeBtn.checked = true
                }
                return;
            })
        })
    }







    // 앵커스 소스


    // window.d_scp_cookiepopName = 'cookiePop_kr-ko'

    // function setCookiePopup(d_scp_value) {
    //     if (getCookie(window.d_scp_cookiepopName) != null) {
    //         delCookie(window.d_scp_cookiepopName);
    //     }
    //     setCookie(window.d_scp_cookiepopName, d_scp_value, 1);
    //     $('.cookie-pop').addClass('hidden');
    //     return;
    // }

    // function setCookie(name, value, exp) {
    //     const date = new Date();
    //     date.setTime(date.getTime() + (exp * 30 * 24 * 60 * 60 * 1000)); // 24*60*60*1000 일
    //     const expires = "expires=" + date.toGMTString();
    //     document.cookie = name + "=" + value + "; path=/;" + expires + ";";
    // }

    // function getCookie(name) {
    //     const value = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
    //     return value ? value[2] : null;
    // }

    // function delCookie(name) {
    //     document.cookie = name + '=; path=/;expires=Thu, 01 Jan 1999 00:00:10 GMT;';
    // }


    // window.getCookie = getCookie;
    // window.setCookie = setCookie;
    // window.setCookiePopup = setCookiePopup;
    // window.delCookie = delCookie;



    // var d_scp_cookiepopName = "cookiePop_" + $(".cookie-pop").data("sitecd");
    // $(document).ready(function () {
    //     var d_scp_cookie = getCookie(d_scp_cookiepopName);
    //     if (!d_scp_cookie) {
    //         $('.cookie-pop').removeClass('hidden');
    //     }
    // });












}
window.addEventListener('compFuncRun', main);


})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
// extracted by mini-css-extract-plugin

})();

/******/ })()
;
$(document).ready(function(){
    

    
    
});
