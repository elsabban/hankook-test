/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
(() => {

;// CONCATENATED MODULE: external "Swiper"
const external_Swiper_namespaceObject = Swiper;
var external_Swiper_default = /*#__PURE__*/__webpack_require__.n(external_Swiper_namespaceObject);
;// CONCATENATED MODULE: ./src/components/local/local-tires-detail-awards/clientlibs/js/main.js
function main() {
  external_Swiper_default().use([external_Swiper_namespaceObject.Navigation, external_Swiper_namespaceObject.Pagination]);
  
  $('.ltdt .ltdt__swiper').each(function() {

    const $ltdtSwiper = $(this);

    let options = {};
    if ( $ltdtSwiper.find(".swiper-slide").length == 1 ) {
      options = { 
        slidesPerView: 1,
        spaceBetween: 0,
        centeredSlides: true,
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        breakpoints: {
          768: {
            slidesPerView: 1,
            spaceBetween: 0,
          },
          1366: {
            slidesPerView: 1,
            spaceBetween: 0,
          },
        }
      } 
    } else if ( $ltdtSwiper.find(".swiper-slide").length == 2 ) {
      options = { 
        slidesPerView: 1.2,
        spaceBetween: 15,
        centeredSlides: false,
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        breakpoints: {
          768: {
            slidesPerView: 2,
            spaceBetween: 15,
          },
          1366: {
            slidesPerView: 2,
            spaceBetween: 15,
          },
        }
      } 
    } else { 
      options = { 
        slidesPerView: 1.2,
        spaceBetween: 15,
        //centeredSlides: true,
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        breakpoints: {
          768: {
            slidesPerView: 2.4,
            spaceBetween: 15,
          },
          1366: {
            slidesPerView: 3,
            spaceBetween: 15,
          },
        }
      } 
    } 
    var swiper = new (external_Swiper_default())($ltdtSwiper[0], options);

    if ( $ltdtSwiper.find(".swiper-slide").length <= 3 ) { 
      $ltdtSwiper.find('.swiper-nav').hide();
    }

    if ( $ltdtSwiper.find(".swiper-slide").length == 2 ) { 
      $ltdtSwiper.find('.swiper-wrapper').addClass('flex-space');
    }

    if ( $ltdtSwiper.find(".swiper-slide").length == 1 ) { 
      $ltdtSwiper.find('.swiper-wrapper').addClass('flex-space-c');
    }

    console.log(swiper);
  })
}
window.addEventListener('compFuncRun', main);
})();

// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
(() => {
// extracted by mini-css-extract-plugin

})();

/******/ })()
;