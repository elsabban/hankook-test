/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
(() => {
function main() {
  const topBtn =   $('.lca .accordion-top')
  let timer = true;
  topBtn.on('click',(event)=>{

    if(!timer) return;

    if(timer){
      timer = false;
      setTimeout(() => {
        timer = true
      }, 200);
    }
    
    const _target = $(event.currentTarget)
    if(_target.hasClass('active')){
      _target.removeClass('active')
    } else {
      topBtn.removeClass('active')
      _target.addClass('active')
    }
    const topBtnON =   $('.lca .accordion-top.active')
    const topBtnOFF =   $('.lca .accordion-top').not('.active')

      topBtnOFF.next().stop().slideUp('200',function(){
        window.locomotive && window.locomotive.update();
      })
      topBtnON.next().slideDown('200',function(){
        window.locomotive && window.locomotive.update();
        const headerHeight = document.getElementById('header') ? document.getElementById('header').clientHeight : 0
        const targetY = topBtnON[0].getBoundingClientRect().top + window.locomotive.scroll.instance.scroll.y - headerHeight
        window.locomotive.scrollTo( targetY, {duration:0} );
      });
  })

  const tab = $('.lca .tab-list > li');
  function tabToggle(){
    tab.on('click',(event)=>{
      const _target = $(event.target)
      const key = _target.data('type')
      _target.addClass('active').siblings().removeClass('active');
      $(`.lca .content-wrap[data-type="${key}"]`).addClass('active').siblings().removeClass('active')
    })
    window.locomotive && window.locomotive.update();
  }
  tabToggle();
}
window.addEventListener('compFuncRun', main);
})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
// extracted by mini-css-extract-plugin

})();

/******/ })()
;